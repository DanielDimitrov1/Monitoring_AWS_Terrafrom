name: Terraform CI/CD

on:
  push:
    branches:
      - testing
      - staging
  workflow_dispatch:
    inputs:
      ACTION:
        description: 'Action to take'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - production
      ENV:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - testing
          - production
      AWS_REGION:
        description: 'AWS region'
        required: true
        default: 'eu-west-1'
        type: choice
        options:
          - eu-west-1
      ENVIRONMENT_DIRECTORY:
        description: 'Environment directory'
        required: true
        default: 'env/staging'
        type: choice
        options:
          - env/staging
          - env/testing
          - env/production

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip jq
          pip3 install --upgrade pip
          pip3 install --no-cache-dir awscli
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.53.2/terragrunt_linux_amd64
          mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          chmod +x /usr/local/bin/terragrunt

      - name: Setup Authentication
        run: |
          case "${{ github.ref_name }}" in
            testing)
              sh scripts/setup_authentication.sh 'arn:aws:iam::277707138850:role/cicd-aws-oidc'
              ;;
            staging)
              sh scripts/setup_authentication.sh 'arn:aws:iam::XXXXXX:role/ROLE_NAME-cicd-iac-aws-oidc-staging'
              ;;
            production)
              sh scripts/setup_authentication.sh 'arn:aws:iam::XXXXXX:role/ROLE_NAME-cicd-iac-aws-oidc-prod'
              ;;
            *)
              echo "Invalid environment specified"
              exit 1
              ;;
          esac

      - name: Terraform Init
        run: |
          terragrunt init --terragrunt-working-dir ${{ github.workspace }}/${{ inputs.ENVIRONMENT_DIRECTORY }}/${{ inputs.AWS_REGION }}

      - name: Terraform Plan
        run: |
          terragrunt plan --terragrunt-working-dir ${{ github.workspace }}/${{ inputs.ENVIRONMENT_DIRECTORY }}/${{ inputs.AWS_REGION }}

      - name: Terraform Apply (if applicable)
        if: ${{ inputs.ACTION == 'apply' }}
        run: |
          terragrunt apply --terragrunt-working-dir ${{ github.workspace }}/${{ inputs.ENVIRONMENT_DIRECTORY }}/${{ inputs.AWS_REGION }}
